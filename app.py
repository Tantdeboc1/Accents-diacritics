# -*- coding: utf-8 -*-
import streamlit as st
import unicodedata
import re

# ===========================
# Configuraci√≥n de p√°gina
# ===========================
st.set_page_config(
    page_title="Monos√≠l¬∑labs (accent diacr√≠tic) ¬∑ Valenci√†",
    page_icon="üîé",
    layout="centered",
)

st.title("Monos√≠l¬∑labs amb accent diacr√≠tic (valenci√†)")
st.caption("Consulta definicions, exemples i parelles amb/sense accent")

# ===========================
# Utilidades
# ===========================
def strip_accents(s: str) -> str:
    """Quita acentos y baja a min√∫sculas para b√∫squedas tolerantes."""
    s = (s or "").strip().lower()
    s = unicodedata.normalize("NFD", s)
    return "".join(ch for ch in s if unicodedata.category(ch) != "Mn")

def search_suggestions(prefix: str):
    """Sugerencias por inicial (con o sin acentos, seg√∫n ajuste)."""
    if st.session_state.get("buscar_sin_acentos"):
        inicial = strip_accents(prefix)[:1]
        return sorted([w for w in monosilabos if strip_accents(w).startswith(inicial)])
    else:
        inicial = prefix.strip().lower()[:1]
        return sorted([w for w in monosilabos if w.lower().startswith(inicial)])

def display_word_info(paraula: str):
    """Muestra la paraula, la categoria, la definici√≥, exemples y el contrast."""
    info = monosilabos[paraula]
    st.subheader(f"‚Äî {paraula} ‚Äî")
    st.write("**Categoria:**", info.get("categoria", "‚Äî"))
    st.write("**Definici√≥:**", info["definicion"])
    st.write("**Exemples:**")
    for ex in info["ejemplos"]:
        st.write(f"- {ex}")

    # Mostrar la paraula en contrast (si existe)
    if paraula in parelles:
        altra = parelles[paraula]
        if altra in monosilabos:
            info2 = monosilabos[altra]
            st.subheader(f"‚Äî {altra} ‚Äî *(contrast)*")
            st.write("**Categoria:**", info2.get("categoria", "‚Äî"))
            st.write("**Definici√≥:**", info2["definicion"])
            st.write("**Exemples:**")
            for ex in info2["ejemplos"]:
                st.write(f"- {ex}")

# ===========================
# Dades (els 15 monos√≠l¬∑labs)
# ===========================
monosilabos = {
    "s√≠": {"categoria": "adverbi d'afirmaci√≥",
           "definicion": "Adverbi d‚Äôafirmaci√≥.",
           "ejemplos": ["S√≠, vindr√© dem√†.", "Va dir que s√≠ a la proposta.", "S√≠ que ho sabia.", "I tant que s√≠!"]},
    "si": {"categoria": "conjunci√≥ condicional",
           "definicion": "Conjunci√≥ condicional.",
           "ejemplos": ["Si plou, ens quedem a casa.", "Si estudies, aprovar√†s.", "Si vols, t‚Äôajude."]},

    "m√©s": {"categoria": "quantificador/comparatiu",
            "definicion": "Comparatiu de quantitat (‚Äòm√©s = m√°s‚Äô).",
            "ejemplos": ["Vull m√©s aigua.", "A√ß√≤ √©s m√©s car que all√≤.", "Necessitem m√©s temps."]},
    "mes": {"categoria": "nom (mes del calendari)",
            "definicion": "Nom del calendari.",
            "ejemplos": ["El mes de juny fa calor.", "Cada mes estalvie un poc.", "Aquest mes comen√ßarem."]},

    "b√©": {"categoria": "adverbi",
           "definicion": "Adverbi (‚Äòb√© = bien‚Äô).",
           "ejemplos": ["Estic b√©, gr√†cies.", "Fes-ho b√©, si us plau.", "No m‚Äôha paregut b√©."]},
    "be": {"categoria": "nom (animal jove)",
           "definicion": "Nom: ‚Äòcorder‚Äô, ‚Äòovella jove‚Äô.",
           "ejemplos": ["Va comprar un be al mercat.", "El be pastura al camp.", "Han nascut dos bens."]},

    "d√©u": {"categoria": "nom propi (entitat divina)",
            "definicion": "Nom: ‚Äòd√©u = dios‚Äô.",
            "ejemplos": ["Crec en un sol D√©u.", "El D√©u dels antics era venerat."]},
    "deu": {"categoria": "numeral / forma de ‚Äòdeure‚Äô",
            "definicion": "Nombre ‚Äòdeu = diez‚Äô o forma de ‚Äòdeure‚Äô (ha/han de).",
            "ejemplos": ["En t√© deu cromos.", "Deu estudiar m√©s per a aprovar.", "Deu ser tard."]},

    "√©s": {"categoria": "verb ‚Äòser‚Äô (3a sing.)",
           "definicion": "Forma verbal del verb ‚Äòser‚Äô.",
           "ejemplos": ["Ell √©s professor.", "La casa √©s gran.", "√âs evident."]},
    "es": {"categoria": "pronom",
           "definicion": "Pronom personal.",
           "ejemplos": ["Es pentina cada mat√≠.", "Es va caure al terra.", "Es mira al mirall."]},

    "m√†": {"categoria": "nom (part del cos)",
           "definicion": "Part del cos (‚Äòm√† = mano‚Äô).",
           "ejemplos": ["La m√† em fa mal.", "Agafa‚Äôm de la m√†.", "D√≥na‚Äôm la m√†."]},
    "ma": {"categoria": "adjectiu possessiu",
           "definicion": "Adjectiu possessiu (‚Äòma = mi‚Äô).",
           "ejemplos": ["Ma casa √©s la teua.", "Ma mare treballa ac√≠.", "Ma germana vindr√†."]},

    "m√≥n": {"categoria": "nom",
            "definicion": "‚ÄòM√≥n = mundo‚Äô.",
            "ejemplos": ["El m√≥n √©s gran.", "Viatjar pel m√≥n √©s enriquidor.", "√âs el meu m√≥n."]},
    "mon": {"categoria": "possessiu arcaic",
            "definicion": "Possessiu arcaic (‚Äòmon = mi‚Äô).",
            "ejemplos": ["Mon pare treballa al camp.", "Mon oncle viu lluny."]},

    "p√®l": {"categoria": "nom",
            "definicion": "‚ÄòP√®l = pelo, cabell‚Äô (filament).",
            "ejemplos": ["Tens un p√®l al jersei.", "El gat ha deixat p√®l al sof√†.", "Se m‚Äôha caigut un p√®l."]},
    "pel": {"categoria": "contracci√≥ (‚Äòper el‚Äô)",
            "definicion": "Contracci√≥ de ‚Äòper el‚Äô.",
            "ejemplos": ["Passe pel carrer major.", "Vaig pel cam√≠ antic.", "Mira pel finestral."]},

    "qu√®": {"categoria": "pronom interrogatiu/exclamatiu",
            "definicion": "Pronom interrogatiu/exclamatiu.",
            "ejemplos": ["Qu√® vols menjar?", "Mira qu√® ha passat!", "Qu√® tal est√†s?"]},
    "que": {"categoria": "conjunci√≥ / pronom relatiu",
            "definicion": "Conjunci√≥ o pronom relatiu.",
            "ejemplos": ["Pensa que vindr√†.", "El llibre que llegisc √©s interessant.", "Diuen que plour√†."]},

    "s√©": {"categoria": "verb ‚Äòsaber‚Äô (1a sing.)",
           "definicion": "Forma verbal de ‚Äòsaber‚Äô.",
           "ejemplos": ["Jo s√© la resposta.", "No s√© qu√® dir-te.", "S√© que tens ra√≥."]},
    "se": {"categoria": "pronom",
           "definicion": "Pronom personal.",
           "ejemplos": ["Se‚Äôn va anar de pressa.", "Se sent feli√ß.", "Se‚Äôn recorda sovint."]},

    "s√≤l": {"categoria": "nom (terra ferma/suelo)",
            "definicion": "‚ÄòS√≤l = suelo, terra ferma‚Äô.",
            "ejemplos": ["El s√≤l est√† mullat.", "No poses aix√≤ al s√≤l.", "El s√≤l √©s irregular."]},
    "sol": {"categoria": "nom (astre) / adjectiu (‚Äòsol = a soles‚Äô)",
            "definicion": "Nom (astre ‚Äòsol‚Äô) o adjectiu (‚Äòsol = solo‚Äô).",
            "ejemplos": ["El sol brilla.", "Estic sol a casa.", "Prefereix estar sol."]},

    "s√≥n": {"categoria": "verb ‚Äòser‚Äô (3a pl.)",
            "definicion": "Forma verbal de ‚Äòser‚Äô (3a persona plural).",
            "ejemplos": ["Ells s√≥n amics.", "Les cases s√≥n grans.", "S√≥n ben educats."]},
    "son": {"categoria": "nom (somnol√®ncia)",
            "definicion": "‚ÄòSon = sue√±o, ganes de dormir‚Äô.",
            "ejemplos": ["Tinc son.", "El beb√© t√© son.", "Em fa son llegir."]},

    "t√©": {"categoria": "verb ‚Äòtindre‚Äô (3a sing.)",
           "definicion": "Forma verbal de ‚Äòtindre‚Äô.",
           "ejemplos": ["Ella t√© un cotxe.", "El xic t√© gana.", "T√© pressa."]},
    "te": {"categoria": "pronom / nom (beguda)",
           "definicion": "Pronom (‚Äòa tu‚Äô) o beguda (‚Äòte‚Äô).",
           "ejemplos": ["Aix√≤ √©s per a te.", "Vull un te calent.", "El te verd m‚Äôagrada."]},

    "√∫s": {"categoria": "nom",
           "definicion": "‚Äò√ös = utilizaci√≥n‚Äô d‚Äôalguna cosa.",
           "ejemplos": ["L‚Äô√∫s del m√≤bil est√† regulat.", "Fa √∫s del diccionari.", "En limita l‚Äô√∫s."]},
    "us": {"categoria": "pronom (a vosaltres)",
           "definicion": "Pronom personal (‚Äòa vosaltres‚Äô).",
           "ejemplos": ["Us espere a la porta.", "Ja us he vist.", "Us ho explique despr√©s."]},

    "v√≥s": {"categoria": "pronom de cortesia",
            "definicion": "Pronom personal de cortesia.",
            "ejemplos": ["V√≥s sou benvingut.", "Com esteu, v√≥s?", "Gr√†cies a v√≥s."]},
    "vos": {"categoria": "pronom (a vosaltres)",
            "definicion": "Pronom personal (‚Äòa vosaltres‚Äô).",
            "ejemplos": ["Vos estime molt.", "Vos ajudar√© en tot.", "Vos ho dir√© dem√†."]},
}

pares = [
    ("b√©", "be"),
    ("d√©u", "deu"),
    ("√©s", "es"),
    ("m√†", "ma"),
    ("m√©s", "mes"),
    ("m√≥n", "mon"),
    ("p√®l", "pel"),
    ("qu√®", "que"),
    ("s√©", "se"),
    ("s√≤l", "sol"),
    ("s√≥n", "son"),
    ("t√©", "te"),
    ("√∫s", "us"),
    ("v√≥s", "vos"),
    ("s√≠", "si"),
]

parelles = {}
for acent, sense in pares:
    parelles[acent] = sense
    parelles[sense] = acent

# √çndice normalizado para b√∫squedas sin acentos (se construye una vez)
index_norm = {strip_accents(k): k for k in monosilabos.keys()}

# ===========================
# Estado de sesi√≥n
# ===========================
if "historial" not in st.session_state:
    st.session_state.historial = []
if "buscar_sin_acentos" not in st.session_state:
    st.session_state.buscar_sin_acentos = True  # activado por defecto

# ===========================
# Barra lateral (men√∫)
# ===========================
with st.sidebar:
    st.header("Men√∫")
    opcio = st.radio("Acci√≥", ["üîç Buscar paraula", "üìÉ Llista", "üìö Llista detallada", "üïò Historial"], index=0)
    st.divider()
    st.checkbox("Buscar sense accents (recomanat)", value=True, key="buscar_sin_acentos")
    st.caption("Ex.: escriu ¬´mes¬ª i trobar√† ¬´m√©s¬ª.")

# ===========================
# Vistas
# ===========================
if opcio == "üîç Buscar paraula":
    st.header("Buscar monos√≠l¬∑lab")
    paraula_input = st.text_input(
        "Escriu el monos√≠l¬∑lab (amb o sense accent):",
        placeholder="Ex: m√©s, que, s√≠..."
    )

    if paraula_input:
        # Normalizaci√≥n opcional
        if st.session_state.buscar_sin_acentos:
            key = index_norm.get(strip_accents(paraula_input))
        else:
            key = paraula_input.strip().lower() if paraula_input.strip().lower() in monosilabos else None

        if key:
            # A√±adir al historial (evita duplicados consecutivos)
            if not st.session_state.historial or st.session_state.historial[-1] != key:
                st.session_state.historial.append(key)

            # Mostrar informaci√≥n
            display_word_info(key)

        else:
            st.warning("No est√† en la base de dades. Revisa l'accent.")
            sugerides = search_suggestions(paraula_input)
            if sugerides:
                st.info(f"**Pistes** (mateixa lletra inicial): {', '.join(sugerides)}")
            else:
                st.info(f"**Paraules disponibles:** {', '.join(sorted(monosilabos.keys()))}")

elif opcio == "üìÉ Llista":
    st.header("Monos√≠l¬∑labs disponibles (en parelles)")
    for acent, sense in pares:
        st.write(f"- {acent} / {sense}")

elif opcio == "üìö Llista detallada":
    st.header("Monos√≠l¬∑labs amb definicions i exemples")
    for acent, sense in pares:
        for p in (acent, sense):
            if p in monosilabos:
                info = monosilabos[p]
                st.markdown(f"**‚Äî {p} ‚Äî**")
                st.write("**Categoria:**", info.get("categoria", "‚Äî"))
                st.write("**Definici√≥:**", info["definicion"])
                st.write("**Exemples:**")
                for ex in info["ejemplos"]:
                    st.write(f"- {ex}")

elif opcio == "üïò Historial":
    st.header("Historial de cerques")
    if st.session_state.historial:
        for h in st.session_state.historial:
            st.write("-", h)
        # Bot√≥n para limpiar historial (lo dejamos ya preparado)
        if st.button("üßπ Netejar historial"):
            st.session_state.historial.clear()
            st.success("Historial netejat.")
    else:
        st.write("Encara no hi ha cerques.")
